[{"D:\\DevReact\\apollo-2021\\src\\index.js":"1","D:\\DevReact\\apollo-2021\\src\\components\\App.js":"2","D:\\DevReact\\apollo-2021\\src\\apollo.js":"3","D:\\DevReact\\apollo-2021\\src\\routes\\Home.js":"4","D:\\DevReact\\apollo-2021\\src\\routes\\Detail.js":"5","D:\\DevReact\\apollo-2021\\src\\components\\Movie.js":"6"},{"size":300,"mtime":1611523319335,"results":"7","hashOfConfig":"8"},{"size":344,"mtime":1611523678009,"results":"9","hashOfConfig":"8"},{"size":764,"mtime":1611715625141,"results":"10","hashOfConfig":"8"},{"size":1673,"mtime":1611716734083,"results":"11","hashOfConfig":"8"},{"size":1853,"mtime":1611524112653,"results":"12","hashOfConfig":"8"},{"size":1115,"mtime":1611523990506,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12bizgq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"D:\\DevReact\\apollo-2021\\src\\index.js",[],["29","30"],"D:\\DevReact\\apollo-2021\\src\\components\\App.js",[],"D:\\DevReact\\apollo-2021\\src\\apollo.js",[],"D:\\DevReact\\apollo-2021\\src\\routes\\Home.js",["31"],"D:\\DevReact\\apollo-2021\\src\\routes\\Detail.js",["32"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql } from \"@apollo/client\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GET_MOVIE = gql`\r\n  query getMovie($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      medium_cover_image\r\n      language\r\n      rating\r\n      description_intro\r\n      isLiked @client\r\n    }\r\n    suggestions(id: $id) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  margin-left: 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 65px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 35px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  width: 25%;\r\n  height: 60%;\r\n  background-color: transparent;\r\n  background-image: url(${(props) => props.bg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id: parseInt(id) }\r\n  });\r\n  return (\r\n    <Container>\r\n      <Column>\r\n        <Title>\r\n          {loading\r\n            ? \"Loading...\"\r\n            : `${data.movie.title} ${data.movie.isLiked ? \"ðŸ’–\" : \"ðŸ˜ž\"}`}\r\n        </Title>\r\n        <Subtitle>\r\n          {data?.movie?.language} Â· {data?.movie?.rating}\r\n        </Subtitle>\r\n        <Description>{data?.movie?.description_intro}</Description>\r\n      </Column>\r\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\DevReact\\apollo-2021\\src\\components\\Movie.js",["33"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nconst LIKE_MOVIE = gql`\r\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 400px;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  background-color: transparent;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 100%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport default ({ id, bg, isLiked }) => {\r\n  const [toggleMovie] = useMutation(LIKE_MOVIE, {\r\n    variables: { id: parseInt(id), isLiked }\r\n  });\r\n  return (\r\n    <Container>\r\n      <Link to={`/${id}`}>\r\n        <Poster bg={bg} />\r\n      </Link>\r\n      <button onClick={toggleMovie}>{isLiked ? \"Unlike\" : \"Like\"}</button>\r\n    </Container>\r\n  );\r\n};\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":61,"column":1,"nodeType":"40","endLine":82,"endColumn":3},{"ruleId":"38","severity":1,"message":"39","line":63,"column":1,"nodeType":"40","endLine":84,"endColumn":3},{"ruleId":"38","severity":1,"message":"39","line":30,"column":1,"nodeType":"40","endLine":42,"endColumn":3},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]